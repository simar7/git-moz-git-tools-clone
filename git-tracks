#!/bin/bash
#
# Usage: git tracks [branch]
#
# Get the upstream branch of the given branch.  If no branch is given, get the
# upstream branch of the currrent branch.
#
# If -d/--default is passed, outputs origin/master if there's no upstream
# branch.
#
# To set <branch>'s upstream branch, run
#
#   $ git branch --set-upstream <branch> <upstream>
#
#
# Based on http://serverfault.com/a/352236/38694

if [[ "$1" == "-d" || "$1" == "--default" ]]; then
  use_default=1
else
  use_default=0
fi

shift

if [[ "$1" == "" ]]; then
  branch=$(git rev-parse --symbolic-full-name HEAD) || exit $?
  branch=${branch##refs/heads/}
else
  branch="$1"
  shift
fi

remote=$(git config "branch.${branch}.remote" || echo '.')
remoteBranch=$(git config "branch.${branch}.merge" || echo '')
remoteBranch=${remoteBranch##refs/heads/}

if [[ "$remote" != "." ]]; then
  echo "${remote:?}/${remoteBranch:?}"
elif [[ "$remoteBranch" != "" ]]; then
  echo "${remoteBranch:?}"
elif [[ "$use_default" == 1 ]] && git rev-parse origin/master &>/dev/null; then
  echo origin/master
else
  echo >&2 "Warning: Could not find a upstream for $branch"
fi
